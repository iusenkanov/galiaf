name: Build and Push to GHCR

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: iusenkanov/galiaf
  SENTRY_ORG: bckg
  SENTRY_PROJECT: galiaf

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set image tag(s)
        run: |
          echo "RELEASE_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=latest" >> $GITHUB_ENV

#      - name: Install sentry-cli
#        run: |
#          curl -sL https://sentry.io/get-cli/ | bash

#      - name: Generate debug ID
#        id: debug_id
#        run: echo "DEBUG_ID=$(uuidgen)" >> $GITHUB_ENV

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

#      - name: Create Sentry debug bundle
#        env:
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#        run: |
#          mkdir -p sentry-bundle
#          sentry-cli debug-files bundle-jvm \
#            --output sentry-bundle \
#            --debug-id $DEBUG_ID \
#            target/classes
#
#      - name: Upload Sentry debug bundle
#        env:
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#        run: |
#          sentry-cli debug-files upload \
#            --org $SENTRY_ORG \
#            --project $SENTRY_PROJECT \
#            --type jvm sentry-bundle

      - name: Build Docker image
        run: |
          docker build --build-arg SENTRY_RELEASE=${{ env.RELEASE_FULL }} \
                 -t $REGISTRY/$IMAGE_NAME:$RELEASE_VERSION \
                 -t $REGISTRY/$IMAGE_NAME:$IMAGE_LATEST .

      - name: Push Docker image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:$RELEASE_VERSION
          docker push $REGISTRY/$IMAGE_NAME:$IMAGE_LATEST

      - name: Notify Sentry of Release
        uses: getsentry/action-release@v1
        with:
          environment: dev
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_RELEASE: ${{ env.RELEASE_FULL }}