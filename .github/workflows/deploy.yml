name: Build and Push to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: iusenkanov/galiaf
  SENTRY_ORG: bckg
  SENTRY_PROJECT: galiaf

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Install sentry-cli
        run: curl -sL https://sentry.io/get-cli/ | bash

      - name: Prepare release vars (SHA, tags)
        run: |
          echo "RELEASE_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "IMAGE_LATEST=latest" >> $GITHUB_ENV
          echo "SENTRY_RELEASE=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Make DEBUG_ID from GIT SHA (UUID v5)
        run: |
          python - << 'PY' >> $GITHUB_ENV
          import uuid, os
          print(f"DEBUG_ID={uuid.uuid5(uuid.NAMESPACE_DNS, os.environ['GITHUB_SHA'])}")
          PY

      - name: Inject sentry-debug-meta.properties
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/sentry-debug-meta.properties <<EOF
          io.sentry.bundle-ids=${DEBUG_ID}
          EOF

      - name: Build with Maven
        run: ./mvnw -B clean package -DskipTests

      - name: Bundle JVM sources
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          mkdir -p build/sentry-bundle
          sentry-cli debug-files bundle-jvm \
            --output build/sentry-bundle \
            --debug-id "$DEBUG_ID" \
            ./src/main/java

      - name: Upload source bundle to Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          sentry-cli debug-files upload --type jvm build/sentry-bundle

      - name: Create/Finalize Sentry Release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          sentry-cli releases new "$SENTRY_RELEASE"
          sentry-cli releases set-commits "$SENTRY_RELEASE" --auto
          sentry-cli releases finalize "$SENTRY_RELEASE"
          sentry-cli releases deploys "$SENTRY_RELEASE" new -e dev

      - name: Build Docker image
        run: |
          docker build \
            --build-arg SENTRY_RELEASE=${SENTRY_RELEASE} \
            -t $REGISTRY/$IMAGE_NAME:$RELEASE_VERSION \
            -t $REGISTRY/$IMAGE_NAME:$IMAGE_LATEST .

      - name: Push Docker image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:$RELEASE_VERSION
          docker push $REGISTRY/$IMAGE_NAME:$IMAGE_LATEST
